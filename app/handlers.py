import os
import shutil
from aiogram import Router, F,Bot
from aiogram.types import Message, CallbackQuery,FSInputFile
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.utils.chat_action import ChatActionSender


import app.download_video as down


router = Router()


@router.message(Command('start'))
async def start(message: Message):
    await message.answer(""""–ü—Ä–∏–≤–µ—Ç, —è –±—ã—Å—Ç—Ä–æ —Å–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏–∑ Instagram, YouTube Shorts –∏ Pinterest. –î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ: üîª" """)


@router.message(F.text)
async def set_url(message:Message,bot:Bot):
    try:
        exzam = await down.check_links(message.text)
        if exzam == "instagram":
            await message.answer("–í–∏–¥–µ–æ —Å–∫–æ—Ä–æ —Å–∫–∞—á–∞–µ—Ç—Å—è")
            video_path = await down.download_video(message.text, "1350p")
            async with ChatActionSender.upload_video(chat_id=message.from_user.id, bot=bot):
                video = FSInputFile(video_path)
                await bot.send_document(message.from_user.id, document=video,caption=message.text)

            # –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ —Å–∂–∞—Ç—ã–π —Ñ–∞–π–ª—ã
            if os.path.exists(video_path):
                os.remove(video_path)

        elif exzam in ["youtube_shorts","pinterest"]:
            await message.answer("–í–∏–¥–µ–æ —Å–∫–æ—Ä–æ —Å–∫–∞—á–∞–µ—Ç—Å—è")
            video_path = await down.download_video(message.text, "720p")
            async with ChatActionSender.upload_video(chat_id=message.from_user.id, bot=bot):
                video = FSInputFile(video_path)
                await bot.send_document(message.from_user.id, document=video,caption=message.text)

            # –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ —Å–∂–∞—Ç—ã–π —Ñ–∞–π–ª—ã
            if os.path.exists(video_path):
                os.remove(video_path)
        else:
            await message.answer(f"–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ '{message.text}' –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–π —Å—Å—ã–ª–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑...")
    except Exception as e:
        print(f"–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–∏ —Å–∫–∞—á–µ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
        shutil.rmtree("/home/dw_bot/video")

#
# @router.callback_query(F.data.in_(["144p", "240p", "360p", "480p", "720p", "1080p"]))
# async def handle_quality_selection(callback: CallbackQuery,state:FSMContext,bot:Bot):
#     try:
#         await callback.message.delete()
#         await callback.message.answer("–í–∏–¥–µ–æ —Å–∫–æ—Ä–æ —Å–∫–∞—á–∞–µ—Ç—Å—è")
#         data = await state.get_data()
#         video_path = await down.download_video(data["url"], callback.data)
#         async with ChatActionSender.upload_video(chat_id=callback.from_user.id, bot=bot):
#             video = FSInputFile(video_path)
#             await bot.send_document(callback.from_user.id, document=video,caption=data["url"])
#         if os.path.exists(video_path):
#             os.remove(video_path)
#
#
#     except Exception as e:
#         print(f"–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
#         await callback.message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–∏ —Å–∫–∞—á–µ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

import os
from aiogram import Router, F,Bot
from aiogram.types import Message, CallbackQuery,FSInputFile, InputFile
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.utils.chat_action import ChatActionSender

import app.download_video as down
import app.keyboards as kb


router = Router()


@router.message(Command('start'))
async def start(message: Message,state:FSMContext):
    await message.answer("""–ü—Ä–∏–≤–µ—Ç, —è –±—ã—Å—Ç—Ä–æ —Å–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ –∏–∑ Instagram,  YouTube, Rutube, VK–≤–∏–¥–µ–æ.

–î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–ª–∏ –∞—É–¥–∏–æ: üîª""")


@router.message(F.text)
async def set_url(message:Message,state:FSMContext,bot:Bot):
    try:
        exzam = await down.check_links(message.text)
        if exzam == "instagram":
            await message.answer("–í–∏–¥–µ–æ —Å–∫–æ—Ä–æ —Å–∫–∞—á–∞–µ—Ç—Å—è")
            video_path = await down.download_video(message.text, "1350p")

            # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –¥–ª—è —Å–∂–∞—Ç–æ–≥–æ –≤–∏–¥–µ–æ
            compressed_video_path = "compressed_" + os.path.basename(video_path)
            await down.compress_video(video_path, compressed_video_path)  # –°–∂–∏–º–∞–µ–º –≤–∏–¥–µ–æ

            async with ChatActionSender.upload_video(chat_id=message.from_user.id, bot=bot):
                video = FSInputFile(compressed_video_path)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∂–∞—Ç—ã–π —Ñ–∞–π–ª
                await message.answer_video(video=video, caption=message.text, timeout=300)

            # –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ —Å–∂–∞—Ç—ã–π —Ñ–∞–π–ª—ã
            if os.path.exists(video_path):
                os.remove(video_path)
            if os.path.exists(compressed_video_path):
                os.remove(compressed_video_path)
        elif exzam in ["youtube","rutube","vk"]:
            await state.update_data(url=message.text)
            await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–æ –≤–∏–¥–µ–æ",reply_markup=kb.start_format)
        else:
            await message.answer("–í–∏–¥–∏–º–æ —Å—Å—ã–ª–∫–∞ –±—ã–ª–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–∏–Ω–∞, –ø–æ–ø—Ä–æ–±—É—Ç–µ –µ—â–µ —Ä–∞–∑")
    except Exception as e:
            print(f"–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
            await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–∏ —Å–∫–∞—á–µ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


@router.callback_query(F.data.in_(["144p", "240p", "360p", "480p", "720p", "1080p"]))
async def handle_quality_selection(callback: CallbackQuery,state:FSMContext,bot:Bot):
    try:
        await callback.message.delete()
        await callback.message.answer("–í–∏–¥–µ–æ —Å–∫–æ—Ä–æ —Å–∫–∞—á–∞–µ—Ç—Å—è")
        data = await state.get_data()
        video_path = await down.download_video(data["url"], callback.data)
        compressed_video_path = "compressed_" + os.path.basename(video_path)
        await down.compress_video(video_path, compressed_video_path)  # –°–∂–∏–º–∞–µ–º –≤–∏–¥–µ–æ
        async with ChatActionSender.upload_video(chat_id=callback.from_user.id, bot=bot):
            video = FSInputFile(compressed_video_path)
            await callback.message.answer_document(document=video,caption=data["url"], timeout=1000)
        if os.path.exists(video_path):
            os.remove(video_path)


    except Exception as e:
        print(f"–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        await callback.message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–∏ —Å–∫–∞—á–µ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
